#-----------------------------------------------------------
# Vivado v2022.1 (64-bit)
# SW Build 3526262 on Mon Apr 18 15:48:16 MDT 2022
# IP Build 3524634 on Mon Apr 18 20:55:01 MDT 2022
# Start of session at: Wed Nov 23 11:20:56 2022
# Process ID: 13760
# Current directory: D:/intelligent_traffic_light/intellight/prototype
# Command line: vivado.exe -gui_launcher_event rodinguilauncherevent10748 D:\intelligent_traffic_light\intellight\prototype\prototype.xpr
# Log file: D:/intelligent_traffic_light/intellight/prototype/vivado.log
# Journal file: D:/intelligent_traffic_light/intellight/prototype\vivado.jou
# Running On: DESKTOP-FRUK6JR, OS: Windows, CPU Frequency: 3593 MHz, CPU Physical cores: 6, Host memory: 8532 MB
#-----------------------------------------------------------
start_gui
open_project D:/intelligent_traffic_light/intellight/prototype/prototype.xpr
update_compile_order -fileset sources_1
open_bd_design {D:/intelligent_traffic_light/intellight/prototype/prototype.srcs/sources_1/bd/Intellight/Intellight.bd}
set_property  ip_repo_paths  D:/intelligent_traffic_light/intellight/database [current_project]
update_ip_catalog
startgroup
create_bd_cell -type ip -vlnv xilinx.com:user:database:1.0 database_0
endgroup
regenerate_bd_layout
connect_bd_net [get_bd_pins database_0/mode] [get_bd_pins Accelerator_0/mode]
connect_bd_net [get_bd_pins database_0/run] [get_bd_pins Accelerator_0/run]
connect_bd_net [get_bd_pins database_0/alpha] [get_bd_pins Accelerator_0/alpha]
connect_bd_net [get_bd_pins database_0/gamma] [get_bd_pins Accelerator_0/gamma]
connect_bd_net [get_bd_pins database_0/max_step] [get_bd_pins Accelerator_0/max_step]
connect_bd_net [get_bd_pins database_0/max_episode] [get_bd_pins Accelerator_0/max_episode]
connect_bd_net [get_bd_pins database_0/seed] [get_bd_pins Accelerator_0/seed]
connect_bd_net [get_bd_pins database_0/L_inc_a] [get_bd_pins Accelerator_0/L_inc_a]
connect_bd_net [get_bd_pins database_0/L_inc_b] [get_bd_pins Accelerator_0/L_inc_b]
connect_bd_net [get_bd_pins database_0/L_inc_c] [get_bd_pins Accelerator_0/L_inc_c]
connect_bd_net [get_bd_pins database_0/L_inc_d] [get_bd_pins Accelerator_0/L_inc_d]
connect_bd_net [get_bd_pins database_0/S_sim] [get_bd_pins Accelerator_0/S_sim]
connect_bd_net [get_bd_pins database_0/L_dec] [get_bd_pins Accelerator_0/L_dec]
save_bd_design
startgroup
create_bd_cell -type ip -vlnv xilinx.com:ip:processing_system7:5.5 processing_system7_0
endgroup
apply_bd_automation -rule xilinx.com:bd_rule:processing_system7 -config {make_external "FIXED_IO, DDR" apply_board_preset "1" Master "Disable" Slave "Disable" }  [get_bd_cells processing_system7_0]
startgroup
apply_bd_automation -rule xilinx.com:bd_rule:axi4 -config { Clk_master {Auto} Clk_slave {Auto} Clk_xbar {Auto} Master {/processing_system7_0/M_AXI_GP0} Slave {/axi_intc_0/s_axi} ddr_seg {Auto} intc_ip {New AXI Interconnect} master_apm {0}}  [get_bd_intf_pins axi_intc_0/s_axi]
apply_bd_automation -rule xilinx.com:bd_rule:axi4 -config { Clk_master {Auto} Clk_slave {Auto} Clk_xbar {Auto} Master {/processing_system7_0/M_AXI_GP0} Slave {/database_0/S00_AXI} ddr_seg {Auto} intc_ip {New AXI Interconnect} master_apm {0}}  [get_bd_intf_pins database_0/S00_AXI]
endgroup
delete_bd_objs [get_bd_ports rst]
connect_bd_net [get_bd_pins rst_ps7_0_100M/peripheral_reset] [get_bd_pins Q_Matrix/rst]
delete_bd_objs [get_bd_ports clk]
apply_bd_automation -rule xilinx.com:bd_rule:clkrst -config { Clk {/processing_system7_0/FCLK_CLK0 (100 MHz)} Freq {100} Ref_Clk0 {} Ref_Clk1 {} Ref_Clk2 {}}  [get_bd_pins Accelerator_0/clk]
regenerate_bd_layout
save_bd_design
make_wrapper -files [get_files D:/intelligent_traffic_light/intellight/prototype/prototype.srcs/sources_1/bd/Intellight/Intellight.bd] -top
add_files -norecurse d:/intelligent_traffic_light/intellight/prototype/prototype.gen/sources_1/bd/Intellight/hdl/Intellight_wrapper.v
update_compile_order -fileset sources_1
# Disabling source management mode.  This is to allow the top design properties to be set without GUI intervention.
set_property source_mgmt_mode None [current_project]
set_property top Intellight_wrapper [current_fileset]
# Re-enabling previously disabled source management mode.
set_property source_mgmt_mode All [current_project]
update_compile_order -fileset sources_1
generate_target all [get_files  D:/intelligent_traffic_light/intellight/prototype/prototype.srcs/sources_1/bd/Intellight/Intellight.bd]
catch { config_ip_cache -export [get_ips -all Intellight_action_ram_0_0] }
catch { config_ip_cache -export [get_ips -all Intellight_action_ram_1_0] }
catch { config_ip_cache -export [get_ips -all Intellight_action_ram_2_0] }
catch { config_ip_cache -export [get_ips -all Intellight_action_ram_3_0] }
catch { config_ip_cache -export [get_ips -all Intellight_Accelerator_0_0] }
catch { config_ip_cache -export [get_ips -all Intellight_axi_intc_0_0] }
catch { config_ip_cache -export [get_ips -all Intellight_database_0_0] }
catch { config_ip_cache -export [get_ips -all Intellight_xbar_0] }
catch { config_ip_cache -export [get_ips -all Intellight_rst_ps7_0_100M_0] }
catch { config_ip_cache -export [get_ips -all Intellight_auto_pc_0] }
export_ip_user_files -of_objects [get_files D:/intelligent_traffic_light/intellight/prototype/prototype.srcs/sources_1/bd/Intellight/Intellight.bd] -no_script -sync -force -quiet
create_ip_run [get_files -of_objects [get_fileset sources_1] D:/intelligent_traffic_light/intellight/prototype/prototype.srcs/sources_1/bd/Intellight/Intellight.bd]
launch_runs Intellight_action_ram_0_0_synth_1 Intellight_action_ram_1_0_synth_1 Intellight_action_ram_2_0_synth_1 Intellight_action_ram_3_0_synth_1 Intellight_Accelerator_0_0_synth_1 Intellight_axi_intc_0_0_synth_1 Intellight_database_0_0_synth_1 Intellight_processing_system7_0_0_synth_1 Intellight_xbar_0_synth_1 Intellight_rst_ps7_0_100M_0_synth_1 Intellight_auto_pc_0_synth_1 -jobs 6
wait_on_run Intellight_action_ram_0_0_synth_1
wait_on_run Intellight_action_ram_1_0_synth_1
wait_on_run Intellight_action_ram_2_0_synth_1
wait_on_run Intellight_action_ram_3_0_synth_1
wait_on_run Intellight_Accelerator_0_0_synth_1
wait_on_run Intellight_axi_intc_0_0_synth_1
wait_on_run Intellight_database_0_0_synth_1
wait_on_run Intellight_processing_system7_0_0_synth_1
wait_on_run Intellight_xbar_0_synth_1
wait_on_run Intellight_rst_ps7_0_100M_0_synth_1
wait_on_run Intellight_auto_pc_0_synth_1
export_simulation -of_objects [get_files D:/intelligent_traffic_light/intellight/prototype/prototype.srcs/sources_1/bd/Intellight/Intellight.bd] -directory D:/intelligent_traffic_light/intellight/prototype/prototype.ip_user_files/sim_scripts -ip_user_files_dir D:/intelligent_traffic_light/intellight/prototype/prototype.ip_user_files -ipstatic_source_dir D:/intelligent_traffic_light/intellight/prototype/prototype.ip_user_files/ipstatic -lib_map_path [list {modelsim=D:/intelligent_traffic_light/intellight/prototype/prototype.cache/compile_simlib/modelsim} {questa=D:/intelligent_traffic_light/intellight/prototype/prototype.cache/compile_simlib/questa} {riviera=D:/intelligent_traffic_light/intellight/prototype/prototype.cache/compile_simlib/riviera} {activehdl=D:/intelligent_traffic_light/intellight/prototype/prototype.cache/compile_simlib/activehdl}] -use_ip_compiled_libs -force -quiet
open_bd_design {D:/intelligent_traffic_light/intellight/prototype/prototype.srcs/sources_1/bd/Intellight/Intellight.bd}
startgroup
set_property -dict [list CONFIG.PCW_USE_FABRIC_INTERRUPT {1} CONFIG.PCW_IRQ_F2P_INTR {1}] [get_bd_cells processing_system7_0]
endgroup
connect_bd_net [get_bd_pins axi_intc_0/irq] [get_bd_pins processing_system7_0/IRQ_F2P]
save_bd_design
make_wrapper -files [get_files D:/intelligent_traffic_light/intellight/prototype/prototype.srcs/sources_1/bd/Intellight/Intellight.bd] -top
reset_run Intellight_processing_system7_0_0_synth_1
launch_runs impl_1 -to_step write_bitstream -jobs 6
wait_on_run impl_1
delete_bd_objs [get_bd_ports D_road1]
delete_bd_objs [get_bd_ports D_road3]
delete_bd_objs [get_bd_ports D_road0]
delete_bd_objs [get_bd_ports D_road2]
save_bd_design
regenerate_bd_layout
make_wrapper -files [get_files D:/intelligent_traffic_light/intellight/prototype/prototype.srcs/sources_1/bd/Intellight/Intellight.bd] -top
regenerate_bd_layout
make_wrapper -files [get_files D:/intelligent_traffic_light/intellight/prototype/prototype.srcs/sources_1/bd/Intellight/Intellight.bd] -top
generate_target all [get_files  D:/intelligent_traffic_light/intellight/prototype/prototype.srcs/sources_1/bd/Intellight/Intellight.bd]
catch { config_ip_cache -export [get_ips -all Intellight_auto_pc_0] }
export_ip_user_files -of_objects [get_files D:/intelligent_traffic_light/intellight/prototype/prototype.srcs/sources_1/bd/Intellight/Intellight.bd] -no_script -sync -force -quiet
create_ip_run [get_files -of_objects [get_fileset sources_1] D:/intelligent_traffic_light/intellight/prototype/prototype.srcs/sources_1/bd/Intellight/Intellight.bd]
export_simulation -of_objects [get_files D:/intelligent_traffic_light/intellight/prototype/prototype.srcs/sources_1/bd/Intellight/Intellight.bd] -directory D:/intelligent_traffic_light/intellight/prototype/prototype.ip_user_files/sim_scripts -ip_user_files_dir D:/intelligent_traffic_light/intellight/prototype/prototype.ip_user_files -ipstatic_source_dir D:/intelligent_traffic_light/intellight/prototype/prototype.ip_user_files/ipstatic -lib_map_path [list {modelsim=D:/intelligent_traffic_light/intellight/prototype/prototype.cache/compile_simlib/modelsim} {questa=D:/intelligent_traffic_light/intellight/prototype/prototype.cache/compile_simlib/questa} {riviera=D:/intelligent_traffic_light/intellight/prototype/prototype.cache/compile_simlib/riviera} {activehdl=D:/intelligent_traffic_light/intellight/prototype/prototype.cache/compile_simlib/activehdl}] -use_ip_compiled_libs -force -quiet
reset_run synth_1
launch_runs impl_1 -to_step write_bitstream -jobs 6
wait_on_run impl_1
regenerate_bd_layout
source D:/intelligent_traffic_light/intellight/export/Q_Matrix_PS.tcl
update_compile_order -fileset sources_1
source D:/intelligent_traffic_light/intellight/export/Q_Matrix_PS.tcl
export_ip_user_files -of_objects  [get_files D:/intelligent_traffic_light/intellight/prototype/prototype.srcs/sources_1/bd/top_level/top_level.bd] -no_script -reset -force -quiet
remove_files  D:/intelligent_traffic_light/intellight/prototype/prototype.srcs/sources_1/bd/top_level/top_level.bd
file delete -force D:/intelligent_traffic_light/intellight/prototype/prototype.srcs/sources_1/bd/top_level
file delete -force d:/intelligent_traffic_light/intellight/prototype/prototype.gen/sources_1/bd/top_level
source D:/intelligent_traffic_light/intellight/export/top_level.tcl
update_compile_order -fileset sources_1
source D:/intelligent_traffic_light/intellight/export/top_level.tcl
set_property  ip_repo_paths  {d:/intelligent_traffic_light/intellight/database D:/intelligent_traffic_light/intellight/accelerator} [current_project]
update_ip_catalog
source D:/intelligent_traffic_light/intellight/export/top_level.tcl
current_bd_design [get_bd_designs Intellight]
current_bd_design top_level
set tmpCopyObjs [concat  [get_bd_cells {Q_Matrix_PS}]]
current_bd_design Intellight
copy_bd_objs -from_design top_level / $tmpCopyObjs
startgroup
apply_bd_automation -rule xilinx.com:bd_rule:axi4 -config { Clk_master {/processing_system7_0/FCLK_CLK0 (100 MHz)} Clk_slave {Auto} Clk_xbar {/processing_system7_0/FCLK_CLK0 (100 MHz)} Master {/processing_system7_0/M_AXI_GP0} Slave {/Q_Matrix_PS/axi_aram_ctrl_0/S_AXI} ddr_seg {Auto} intc_ip {/ps7_0_axi_periph} master_apm {0}}  [get_bd_intf_pins Q_Matrix_PS/axi_aram_ctrl_0/S_AXI]
apply_bd_automation -rule xilinx.com:bd_rule:axi4 -config { Clk_master {/processing_system7_0/FCLK_CLK0 (100 MHz)} Clk_slave {Auto} Clk_xbar {/processing_system7_0/FCLK_CLK0 (100 MHz)} Master {/processing_system7_0/M_AXI_GP0} Slave {/Q_Matrix_PS/axi_aram_ctrl_1/S_AXI} ddr_seg {Auto} intc_ip {/ps7_0_axi_periph} master_apm {0}}  [get_bd_intf_pins Q_Matrix_PS/axi_aram_ctrl_1/S_AXI]
apply_bd_automation -rule xilinx.com:bd_rule:axi4 -config { Clk_master {/processing_system7_0/FCLK_CLK0 (100 MHz)} Clk_slave {Auto} Clk_xbar {/processing_system7_0/FCLK_CLK0 (100 MHz)} Master {/processing_system7_0/M_AXI_GP0} Slave {/Q_Matrix_PS/axi_aram_ctrl_2/S_AXI} ddr_seg {Auto} intc_ip {/ps7_0_axi_periph} master_apm {0}}  [get_bd_intf_pins Q_Matrix_PS/axi_aram_ctrl_2/S_AXI]
apply_bd_automation -rule xilinx.com:bd_rule:axi4 -config { Clk_master {/processing_system7_0/FCLK_CLK0 (100 MHz)} Clk_slave {Auto} Clk_xbar {/processing_system7_0/FCLK_CLK0 (100 MHz)} Master {/processing_system7_0/M_AXI_GP0} Slave {/Q_Matrix_PS/axi_aram_ctrl_3/S_AXI} ddr_seg {Auto} intc_ip {/ps7_0_axi_periph} master_apm {0}}  [get_bd_intf_pins Q_Matrix_PS/axi_aram_ctrl_3/S_AXI]
endgroup
set_property location {4 1265 1172} [get_bd_cells Q_Matrix_PS]
connect_bd_net [get_bd_pins Q_Matrix_PS/D_new] [get_bd_pins Accelerator_0/D_new]
connect_bd_net [get_bd_pins Q_Matrix_PS/rst] [get_bd_pins rst_ps7_0_100M/peripheral_reset]
connect_bd_net [get_bd_pins Q_Matrix_PS/wen] [get_bd_pins Accelerator_0/wen_bram]
connect_bd_net [get_bd_pins Q_Matrix_PS/wen0] [get_bd_pins Accelerator_0/wen0]
connect_bd_net [get_bd_pins Q_Matrix_PS/wen1] [get_bd_pins Accelerator_0/wen1]
connect_bd_net [get_bd_pins Q_Matrix_PS/wen2] [get_bd_pins Accelerator_0/wen2]
connect_bd_net [get_bd_pins Q_Matrix_PS/wen3] [get_bd_pins Accelerator_0/wen3]
connect_bd_net [get_bd_pins Q_Matrix_PS/wr_addr] [get_bd_pins Accelerator_0/wr_addr]
save_bd_design
regenerate_bd_layout
make_wrapper -files [get_files D:/intelligent_traffic_light/intellight/prototype/prototype.srcs/sources_1/bd/Intellight/Intellight.bd] -top
generate_target all [get_files  D:/intelligent_traffic_light/intellight/prototype/prototype.srcs/sources_1/bd/Intellight/Intellight.bd]
catch { config_ip_cache -export [get_ips -all Intellight_xbar_0] }
catch { config_ip_cache -export [get_ips -all Intellight_action_ram_0_1] }
catch { config_ip_cache -export [get_ips -all Intellight_action_ram_1_1] }
catch { config_ip_cache -export [get_ips -all Intellight_action_ram_2_1] }
catch { config_ip_cache -export [get_ips -all Intellight_action_ram_3_1] }
catch { config_ip_cache -export [get_ips -all Intellight_axi_aram_ctrl_0_0] }
catch { config_ip_cache -export [get_ips -all Intellight_axi_aram_ctrl_1_0] }
catch { config_ip_cache -export [get_ips -all Intellight_axi_aram_ctrl_2_0] }
catch { config_ip_cache -export [get_ips -all Intellight_axi_aram_ctrl_3_0] }
catch { config_ip_cache -export [get_ips -all Intellight_auto_pc_2] }
catch { config_ip_cache -export [get_ips -all Intellight_auto_us_0] }
catch { config_ip_cache -export [get_ips -all Intellight_auto_ds_0] }
catch { config_ip_cache -export [get_ips -all Intellight_auto_pc_0] }
catch { config_ip_cache -export [get_ips -all Intellight_auto_ds_1] }
catch { config_ip_cache -export [get_ips -all Intellight_auto_pc_1] }
export_ip_user_files -of_objects [get_files D:/intelligent_traffic_light/intellight/prototype/prototype.srcs/sources_1/bd/Intellight/Intellight.bd] -no_script -sync -force -quiet
create_ip_run [get_files -of_objects [get_fileset sources_1] D:/intelligent_traffic_light/intellight/prototype/prototype.srcs/sources_1/bd/Intellight/Intellight.bd]
launch_runs Intellight_xbar_0_synth_1 Intellight_action_ram_0_1_synth_1 Intellight_action_ram_1_1_synth_1 Intellight_action_ram_2_1_synth_1 Intellight_action_ram_3_1_synth_1 Intellight_axi_aram_ctrl_0_0_synth_1 Intellight_axi_aram_ctrl_1_0_synth_1 Intellight_axi_aram_ctrl_2_0_synth_1 Intellight_axi_aram_ctrl_3_0_synth_1 Intellight_auto_pc_2_synth_1 Intellight_auto_us_0_synth_1 Intellight_auto_ds_0_synth_1 Intellight_auto_pc_0_synth_1 Intellight_auto_ds_1_synth_1 Intellight_auto_pc_1_synth_1 -jobs 6
wait_on_run Intellight_xbar_0_synth_1
wait_on_run Intellight_action_ram_0_1_synth_1
wait_on_run Intellight_action_ram_1_1_synth_1
wait_on_run Intellight_action_ram_2_1_synth_1
wait_on_run Intellight_action_ram_3_1_synth_1
wait_on_run Intellight_axi_aram_ctrl_0_0_synth_1
wait_on_run Intellight_axi_aram_ctrl_1_0_synth_1
wait_on_run Intellight_axi_aram_ctrl_2_0_synth_1
wait_on_run Intellight_axi_aram_ctrl_3_0_synth_1
wait_on_run Intellight_auto_pc_2_synth_1
wait_on_run Intellight_auto_us_0_synth_1
wait_on_run Intellight_auto_ds_0_synth_1
wait_on_run Intellight_auto_pc_0_synth_1
wait_on_run Intellight_auto_ds_1_synth_1
wait_on_run Intellight_auto_pc_1_synth_1
export_simulation -of_objects [get_files D:/intelligent_traffic_light/intellight/prototype/prototype.srcs/sources_1/bd/Intellight/Intellight.bd] -directory D:/intelligent_traffic_light/intellight/prototype/prototype.ip_user_files/sim_scripts -ip_user_files_dir D:/intelligent_traffic_light/intellight/prototype/prototype.ip_user_files -ipstatic_source_dir D:/intelligent_traffic_light/intellight/prototype/prototype.ip_user_files/ipstatic -lib_map_path [list {modelsim=D:/intelligent_traffic_light/intellight/prototype/prototype.cache/compile_simlib/modelsim} {questa=D:/intelligent_traffic_light/intellight/prototype/prototype.cache/compile_simlib/questa} {riviera=D:/intelligent_traffic_light/intellight/prototype/prototype.cache/compile_simlib/riviera} {activehdl=D:/intelligent_traffic_light/intellight/prototype/prototype.cache/compile_simlib/activehdl}] -use_ip_compiled_libs -force -quiet
reset_run synth_1
launch_runs impl_1 -to_step write_bitstream -jobs 6
wait_on_run impl_1
regenerate_bd_layout
