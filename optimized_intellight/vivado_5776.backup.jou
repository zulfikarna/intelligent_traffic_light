#-----------------------------------------------------------
# Vivado v2021.1 (64-bit)
# SW Build 3247384 on Thu Jun 10 19:36:33 MDT 2021
# IP Build 3246043 on Fri Jun 11 00:30:35 MDT 2021
# Start of session at: Mon Jul 18 15:05:56 2022
# Process ID: 5776
# Current directory: F:/Intelligent Traffic Light/optimized_intellight
# Command line: vivado.exe -gui_launcher_event rodinguilauncherevent8516 F:\Intelligent Traffic Light\optimized_intellight\optimized_intellight.xpr
# Log file: F:/Intelligent Traffic Light/optimized_intellight/vivado.log
# Journal file: F:/Intelligent Traffic Light/optimized_intellight\vivado.jou
#-----------------------------------------------------------
start_gui
open_project {F:/Intelligent Traffic Light/optimized_intellight/optimized_intellight.xpr}
update_compile_order -fileset sources_1
update_module_reference intellight_SD_0_0
update_module_reference intellight_PG_0_0
report_ip_status -name ip_status 
upgrade_ip -vlnv xilinx.com:user:intellight_ip:1.0 [get_ips  intellight_intellight_ip_0_0] -log ip_upgrade.log
export_ip_user_files -of_objects [get_ips intellight_intellight_ip_0_0] -no_script -sync -force -quiet
generate_target all [get_files  {{F:/Intelligent Traffic Light/optimized_intellight/optimized_intellight.srcs/sources_1/bd/intellight/intellight.bd}}]
catch { config_ip_cache -export [get_ips -all intellight_SD_0_0] }
catch { config_ip_cache -export [get_ips -all intellight_PG_0_0] }
catch { config_ip_cache -export [get_ips -all intellight_RD_0_0] }
catch { config_ip_cache -export [get_ips -all intellight_axi_smc_0] }
catch { config_ip_cache -export [get_ips -all intellight_intellight_ip_0_0] }
catch { config_ip_cache -export [get_ips -all intellight_QA_0_0] }
export_ip_user_files -of_objects [get_files {{F:/Intelligent Traffic Light/optimized_intellight/optimized_intellight.srcs/sources_1/bd/intellight/intellight.bd}}] -no_script -sync -force -quiet
create_ip_run [get_files -of_objects [get_fileset sources_1] {{F:/Intelligent Traffic Light/optimized_intellight/optimized_intellight.srcs/sources_1/bd/intellight/intellight.bd}}]
launch_runs intellight_RD_0_0_synth_1 intellight_axi_smc_0_synth_1 intellight_SD_0_0_synth_1 intellight_PG_0_0_synth_1 intellight_intellight_ip_0_0_synth_1 intellight_QA_0_0_synth_1 -jobs 8
wait_on_run intellight_RD_0_0_synth_1
wait_on_run intellight_axi_smc_0_synth_1
wait_on_run intellight_SD_0_0_synth_1
wait_on_run intellight_PG_0_0_synth_1
wait_on_run intellight_intellight_ip_0_0_synth_1
wait_on_run intellight_QA_0_0_synth_1
export_simulation -of_objects [get_files {{F:/Intelligent Traffic Light/optimized_intellight/optimized_intellight.srcs/sources_1/bd/intellight/intellight.bd}}] -directory {F:/Intelligent Traffic Light/optimized_intellight/optimized_intellight.ip_user_files/sim_scripts} -ip_user_files_dir {F:/Intelligent Traffic Light/optimized_intellight/optimized_intellight.ip_user_files} -ipstatic_source_dir {F:/Intelligent Traffic Light/optimized_intellight/optimized_intellight.ip_user_files/ipstatic} -lib_map_path [list {modelsim=F:/Intelligent Traffic Light/optimized_intellight/optimized_intellight.cache/compile_simlib/modelsim} {questa=F:/Intelligent Traffic Light/optimized_intellight/optimized_intellight.cache/compile_simlib/questa} {riviera=F:/Intelligent Traffic Light/optimized_intellight/optimized_intellight.cache/compile_simlib/riviera} {activehdl=F:/Intelligent Traffic Light/optimized_intellight/optimized_intellight.cache/compile_simlib/activehdl}] -use_ip_compiled_libs -force -quiet
report_ip_status -name ip_status 
update_module_reference intellight_RD_0_0
update_module_reference intellight_PG_0_0
make_wrapper -files [get_files {{F:/Intelligent Traffic Light/optimized_intellight/optimized_intellight.srcs/sources_1/bd/intellight/intellight.bd}}] -top
make_wrapper -files [get_files {{F:/Intelligent Traffic Light/optimized_intellight/optimized_intellight.srcs/sources_1/bd/intellight/intellight.bd}}] -top
generate_target all [get_files  {{F:/Intelligent Traffic Light/optimized_intellight/optimized_intellight.srcs/sources_1/bd/intellight/intellight.bd}}]
catch { config_ip_cache -export [get_ips -all intellight_PG_0_0] }
catch { config_ip_cache -export [get_ips -all intellight_RD_0_0] }
catch { config_ip_cache -export [get_ips -all intellight_axi_smc_0] }
catch { [ delete_ip_run [get_ips -all intellight_axi_smc_0] ] }
export_ip_user_files -of_objects [get_files {{F:/Intelligent Traffic Light/optimized_intellight/optimized_intellight.srcs/sources_1/bd/intellight/intellight.bd}}] -no_script -sync -force -quiet
create_ip_run [get_files -of_objects [get_fileset sources_1] {{F:/Intelligent Traffic Light/optimized_intellight/optimized_intellight.srcs/sources_1/bd/intellight/intellight.bd}}]
launch_runs intellight_PG_0_0_synth_1 intellight_RD_0_0_synth_1 -jobs 8
wait_on_run intellight_PG_0_0_synth_1
wait_on_run intellight_RD_0_0_synth_1
export_simulation -of_objects [get_files {{F:/Intelligent Traffic Light/optimized_intellight/optimized_intellight.srcs/sources_1/bd/intellight/intellight.bd}}] -directory {F:/Intelligent Traffic Light/optimized_intellight/optimized_intellight.ip_user_files/sim_scripts} -ip_user_files_dir {F:/Intelligent Traffic Light/optimized_intellight/optimized_intellight.ip_user_files} -ipstatic_source_dir {F:/Intelligent Traffic Light/optimized_intellight/optimized_intellight.ip_user_files/ipstatic} -lib_map_path [list {modelsim=F:/Intelligent Traffic Light/optimized_intellight/optimized_intellight.cache/compile_simlib/modelsim} {questa=F:/Intelligent Traffic Light/optimized_intellight/optimized_intellight.cache/compile_simlib/questa} {riviera=F:/Intelligent Traffic Light/optimized_intellight/optimized_intellight.cache/compile_simlib/riviera} {activehdl=F:/Intelligent Traffic Light/optimized_intellight/optimized_intellight.cache/compile_simlib/activehdl}] -use_ip_compiled_libs -force -quiet
reset_run synth_1
launch_runs synth_1 -jobs 8
wait_on_run synth_1
launch_runs impl_1 -to_step write_bitstream -jobs 8
wait_on_run impl_1
delete_bd_objs [get_bd_ports READ_ADDR]
delete_bd_objs [get_bd_ports WRITE_ADDR]
delete_bd_objs [get_bd_ports wen0]
save_bd_design
startgroup
create_bd_port -dir O finish
connect_bd_net [get_bd_pins /CU_0/finish] [get_bd_ports finish]
endgroup
make_wrapper -files [get_files {{F:/Intelligent Traffic Light/optimized_intellight/optimized_intellight.srcs/sources_1/bd/intellight/intellight.bd}}] -top
generate_target all [get_files  {{F:/Intelligent Traffic Light/optimized_intellight/optimized_intellight.srcs/sources_1/bd/intellight/intellight.bd}}]
catch { config_ip_cache -export [get_ips -all intellight_axi_smc_0] }
export_ip_user_files -of_objects [get_files {{F:/Intelligent Traffic Light/optimized_intellight/optimized_intellight.srcs/sources_1/bd/intellight/intellight.bd}}] -no_script -sync -force -quiet
create_ip_run [get_files -of_objects [get_fileset sources_1] {{F:/Intelligent Traffic Light/optimized_intellight/optimized_intellight.srcs/sources_1/bd/intellight/intellight.bd}}]
export_simulation -of_objects [get_files {{F:/Intelligent Traffic Light/optimized_intellight/optimized_intellight.srcs/sources_1/bd/intellight/intellight.bd}}] -directory {F:/Intelligent Traffic Light/optimized_intellight/optimized_intellight.ip_user_files/sim_scripts} -ip_user_files_dir {F:/Intelligent Traffic Light/optimized_intellight/optimized_intellight.ip_user_files} -ipstatic_source_dir {F:/Intelligent Traffic Light/optimized_intellight/optimized_intellight.ip_user_files/ipstatic} -lib_map_path [list {modelsim=F:/Intelligent Traffic Light/optimized_intellight/optimized_intellight.cache/compile_simlib/modelsim} {questa=F:/Intelligent Traffic Light/optimized_intellight/optimized_intellight.cache/compile_simlib/questa} {riviera=F:/Intelligent Traffic Light/optimized_intellight/optimized_intellight.cache/compile_simlib/riviera} {activehdl=F:/Intelligent Traffic Light/optimized_intellight/optimized_intellight.cache/compile_simlib/activehdl}] -use_ip_compiled_libs -force -quiet
reset_run synth_1
launch_runs impl_1 -to_step write_bitstream -jobs 8
wait_on_run impl_1
